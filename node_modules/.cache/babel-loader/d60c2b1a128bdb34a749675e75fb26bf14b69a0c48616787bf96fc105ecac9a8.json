{"ast":null,"code":"import React,{Component}from'react';import bbox from\"@turf/bbox\";import center from\"@turf/center\";import bboxPolygon from'@turf/bbox-polygon';import CelestialMap from'./CelestialMap';import Card from'./Card';import IntroPopup from\"./IntroPopup\";import logo from'./assets/images/stellarstories.png';import sampleStories from'./assets/samplestories';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class App extends Component{constructor(props){super(props);this.getPointsFromStories=stories=>{//get unique points only\nconst points=stories.reduce((accumulator,story)=>{story.points.map(storyPoint=>{if(!accumulator.some(point=>point.id===storyPoint.id)){accumulator.push(storyPoint);}});return accumulator;},[]);const pointObj={type:\"FeatureCollection\",features:points};return pointObj;};this.filterMap=()=>{// Build Filter Map for Dropdowns\n// {category name: array of items}\nlet filterMap={};this.state.filterOptions.sort().map(category=>{switch(category){case\"Name\":{// first category: Name\nconst regionSet=new Set(this.state.sourceStories.map(story=>{return story.points.map(point=>point.properties.region);}).flat());filterMap[category]=Array.from(regionSet).filter(item=>item).sort();break;}case\"Type of Celestial Body\":{// second category: Type of Celestial Body\nconst typeOfPlaceSet=new Set(this.state.sourceStories.map(story=>{return story.points.map(point=>point.properties.type_of_place);}).flat());filterMap[category]=Array.from(typeOfPlaceSet).filter(item=>item).sort();break;}case\"Speaker\":{// third category: Speaker\nconst speakerSet=new Set(this.state.sourceStories.map(story=>{return story.speakers.map(speaker=>speaker.name);}).flat());filterMap[category]=Array.from(speakerSet).filter(item=>item).sort();break;}case\"Topic\":{// fourth category: Topic\nconst topicSet=new Set(this.state.sourceStories.map(story=>story.topic).flat());filterMap[category]=Array.from(topicSet).filter(item=>item).sort();break;}case\"Language\":{// fifth category: Language\nconst languageSet=new Set(this.state.sourceStories.map(story=>story.language).flat());filterMap[category]=Array.from(languageSet).filter(item=>item).sort();break;}case\"Speaker Community\":{// sixth category: Speaker Community\nconst communitySet=new Set(this.state.sourceStories.map(story=>{return story.speakers.map(speaker=>speaker.speaker_community);}).flat());filterMap[category]=Array.from(communitySet).filter(item=>item).sort();break;}}});return filterMap;};this.handleFilter=(category,item)=>{let filteredStories=[];switch(category){case\"Name\":{// first category: Name\nfilteredStories=this.state.sourceStories.filter(story=>{if(story.points.some(point=>{return point.properties.region&&point.properties.region.toLowerCase()===item.toLowerCase();})){return story;}});break;}case\"Type of Celestial Body\":{// second category: type of celestial body\nfilteredStories=this.state.sourceStories.filter(story=>{if(story.points.some(point=>{return point.properties[\"type_of_place\"]&&point.properties[\"type_of_place\"].toLowerCase()===item.toLowerCase();})){return story;}});break;}case\"Speaker\":{// third category: speaker name\nfilteredStories=this.state.sourceStories.filter(story=>{if(story.speakers.some(speaker=>{return speaker.name&&speaker.name.toLowerCase()===item.toLowerCase();})){return story;}});break;}case\"Topic\":{// fourth category: topic\nfilteredStories=this.state.sourceStories.filter(story=>{if(story.topic){return story.topic&&story.topic.toLowerCase()===item.toLowerCase();}});break;}case\"Language\":{// fifth category: language\nfilteredStories=this.state.sourceStories.filter(story=>{if(story.language){return story.language&&story.language.toLowerCase()===item.toLowerCase();}});break;}case\"Speaker Community\":{// sixth category: community\nfilteredStories=this.state.sourceStories.filter(story=>story.speakers.some(speaker=>speaker.speaker_community&&speaker.speaker_community.toLowerCase()===item.toLowerCase())).map(story=>{let n=Object.assign({},story);n.speakers=n.speakers.filter(speaker=>speaker.speaker_community&&speaker.speaker_community.toLowerCase()===item.toLowerCase());return n;});break;}}if(filteredStories){const filteredPoints=this.getPointsFromStories(filteredStories);const bounds=bbox(filteredPoints);const bboxPoly=bboxPolygon(bounds);const centerPoint=center(bboxPoly).geometry.coordinates;const framedView={center:[centerPoint[0],centerPoint[1],0]};var activePoint=this.state.activePoint;if(activePoint&&!filteredPoints.features.some(point=>point.id===activePoint.id)){activePoint=null;}this.setState({stories:filteredStories,points:filteredPoints,framedView,activePoint});}};this.handleFilterCategoryChange=option=>{if(option===null){this.resetStoriesAndMap();}else{const category=option.value;this.setState({filterCategory:category,itemOptions:this.filterMap()[category]});}};this.handleFilterItemChange=option=>{if(option===null){this.resetStoriesAndMap();}else if(this.state.filterCategory!==null){const item=option.value;this.handleFilter(this.state.filterCategory,item);this.setState({filterItem:item});}};this.showMapPointStories=stories=>{let storyTitles=stories.map(story=>story.title);let filteredStories=[];filteredStories=this.state.sourceStories.filter(story=>storyTitles.includes(story.title));if(filteredStories){this.setState({stories:filteredStories,activeStory:filteredStories[0]});}};this.handleStoriesChanged=stories=>{this.setState({stories:stories});};this.handleStoryClick=story=>{// set active to first point in story\nconst point=story.points[0];const framedView={center:[point.geometry.coordinates[0],point.geometry.coordinates[1],0]};this.setState({activePoint:point,activeStory:story,framedView});};this.resetStoriesAndMap=()=>{const points=this.getPointsFromStories(sampleStories);this.setState({stories:sampleStories,points:points,framedView:{center:[this.state.centerLong,this.state.centerLat,0]},activePoint:null,activeStory:null,filterCategory:\"Select category\",filterItem:\"Select option\",itemOptions:[]});};// build category list based that excludes empty category sets\nthis.buildFilterCategories=()=>{const variableCategories=this.state.filterOptions;let categories=this.filterMap();Object.keys(categories).map(cat=>{if(categories[cat].length===0&&variableCategories.includes(cat)){delete categories[cat];}});let filteredCategories=Object.keys(categories);return filteredCategories;};this.state={framedView:null,// store information about how view should be laid out\npoints:{},sourceStories:sampleStories,stories:sampleStories,activePoint:null,activeStory:null,filterOptions:[\"Name\",\"Type of Celestial Body\",\"Speaker\",\"Topic\",\"Language\",\"Speaker Community\"],filterCategory:\"Select category\",filterItem:\"Select option\",itemOptions:[],zoom:1.25,centerLong:-120,centerLat:-35,logoPath:logo};}componentDidMount(){const points=this.getPointsFromStories(this.state.stories);this.setState({points:points});}render(){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(CelestialMap,{points:this.state.points,clearFilteredStories:this.resetStoriesAndMap,activePoint:this.state.activePoint,framedView:this.state.framedView,centerLat:this.state.centerLat,centerLong:this.state.centerLong,zoom:this.state.zoom}),/*#__PURE__*/_jsx(Card,{activeStory:this.state.activeStory,stories:this.state.stories,handleStoriesChanged:this.handleStoriesChanged,categories:this.buildFilterCategories(),filterMap:this.filterMap(),handleFilter:this.handleFilter,clearFilteredStories:this.resetStoriesAndMap,onStoryClick:this.handleStoryClick,logo_path:this.state.logoPath,filterCategory:this.state.filterCategory,filterItem:this.state.filterItem,handleFilterCategoryChange:this.handleFilterCategoryChange,handleFilterItemChange:this.handleFilterItemChange,itemOptions:this.state.itemOptions}),/*#__PURE__*/_jsx(IntroPopup,{})]});}}export default App;","map":{"version":3,"names":["React","Component","bbox","center","bboxPolygon","CelestialMap","Card","IntroPopup","logo","sampleStories","jsx","_jsx","jsxs","_jsxs","App","constructor","props","getPointsFromStories","stories","points","reduce","accumulator","story","map","storyPoint","some","point","id","push","pointObj","type","features","filterMap","state","filterOptions","sort","category","regionSet","Set","sourceStories","properties","region","flat","Array","from","filter","item","typeOfPlaceSet","type_of_place","speakerSet","speakers","speaker","name","topicSet","topic","languageSet","language","communitySet","speaker_community","handleFilter","filteredStories","toLowerCase","n","Object","assign","filteredPoints","bounds","bboxPoly","centerPoint","geometry","coordinates","framedView","activePoint","setState","handleFilterCategoryChange","option","resetStoriesAndMap","value","filterCategory","itemOptions","handleFilterItemChange","filterItem","showMapPointStories","storyTitles","title","includes","activeStory","handleStoriesChanged","handleStoryClick","centerLong","centerLat","buildFilterCategories","variableCategories","categories","keys","cat","length","filteredCategories","zoom","logoPath","componentDidMount","render","Fragment","children","clearFilteredStories","onStoryClick","logo_path"],"sources":["C:/Users/alessandromusetta/node-app/cultura-estelar/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport bbox from \"@turf/bbox\";\nimport center from \"@turf/center\";\nimport bboxPolygon from '@turf/bbox-polygon'\n\nimport CelestialMap from './CelestialMap';\nimport Card from './Card';\nimport IntroPopup from \"./IntroPopup\";\n\nimport logo from './assets/images/stellarstories.png';\nimport sampleStories from './assets/samplestories';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      framedView: null, // store information about how view should be laid out\n      points: {},\n      sourceStories: sampleStories,\n      stories: sampleStories,\n      activePoint: null,\n      activeStory: null,\n      filterOptions: [\"Name\", \"Type of Celestial Body\", \"Speaker\", \"Topic\", \"Language\", \"Speaker Community\"],\n      filterCategory: \"Select category\",\n      filterItem: \"Select option\",\n      itemOptions: [],\n      zoom: 1.25,\n      centerLong: -120,\n      centerLat: -35,\n      logoPath: logo\n    };\n  }\n\n  componentDidMount() {\n    const points = this.getPointsFromStories(this.state.stories);\n    this.setState({ points: points });\n  }\n\n  getPointsFromStories = stories => {\n    //get unique points only\n    const points = stories.reduce((accumulator, story) => {\n      story.points.map(storyPoint => {\n        if (!accumulator.some(point => point.id === storyPoint.id)) {\n          accumulator.push(storyPoint);\n        }\n      });\n      return accumulator;\n    }, []);\n\n    const pointObj = {\n      type: \"FeatureCollection\",\n      features: points\n    };\n    return pointObj;\n  };\n\n  filterMap = () => {\n    // Build Filter Map for Dropdowns\n    // {category name: array of items}\n    let filterMap = {};\n    this.state.filterOptions.sort().map(category => {\n      switch (category) {\n        case \"Name\": {\n          // first category: Name\n          const regionSet = new Set(\n            this.state.sourceStories\n              .map(story => {\n                return story.points.map(point => point.properties.region);\n              })\n              .flat()\n          );\n          filterMap[category] = Array.from(regionSet).filter(item => item).sort();\n          break;\n        }\n        case \"Type of Celestial Body\": {\n          // second category: Type of Celestial Body\n          const typeOfPlaceSet = new Set(\n            this.state.sourceStories\n              .map(story => {\n                return story.points.map(\n                  point => point.properties.type_of_place\n                );\n              })\n              .flat()\n          );\n          filterMap[category] = Array.from(typeOfPlaceSet).filter(item => item).sort();\n          break;\n        }\n        case \"Speaker\": {\n          // third category: Speaker\n          const speakerSet = new Set(\n            this.state.sourceStories\n              .map(story => {\n                return story.speakers.map(speaker => speaker.name);\n              })\n              .flat()\n          );\n          filterMap[category] = Array.from(speakerSet).filter(item => item).sort();\n          break;\n        }\n        case \"Topic\": {\n          // fourth category: Topic\n          const topicSet = new Set(\n            this.state.sourceStories\n              .map(story => story.topic)\n              .flat()\n          );\n          filterMap[category] = Array.from(topicSet).filter(item => item).sort();\n          break;\n        }\n        case \"Language\": {\n          // fifth category: Language\n          const languageSet = new Set(\n            this.state.sourceStories\n              .map(story => story.language)\n              .flat()\n          );\n          filterMap[category] = Array.from(languageSet).filter(item => item).sort();\n          break;\n        }\n        case \"Speaker Community\": {\n          // sixth category: Speaker Community\n          const communitySet = new Set(\n            this.state.sourceStories\n            .map(story => {\n              return story.speakers.map(speaker => speaker.speaker_community);\n            })\n            .flat()\n          );\n          filterMap[category] = Array.from(communitySet).filter(item => item).sort();\n          break;\n        }\n      }\n    });\n    return filterMap;\n  };\n\n  handleFilter = (category, item) => {\n    let filteredStories = [];\n    switch (category) {\n      case \"Name\": {\n        // first category: Name\n        filteredStories = this.state.sourceStories.filter(story => {\n          if (\n            story.points.some(point => {\n              return (\n                point.properties.region &&\n                point.properties.region.toLowerCase() === item.toLowerCase()\n              );\n            })\n          ) {\n            return story;\n          }\n        });\n        break;\n      }\n      case \"Type of Celestial Body\": {\n        // second category: type of celestial body\n        filteredStories = this.state.sourceStories.filter(story => {\n          if (\n            story.points.some(point => {\n              return (\n                point.properties[\"type_of_place\"] &&\n                point.properties[\"type_of_place\"].toLowerCase() ===\n                  item.toLowerCase()\n              );\n            })\n          ) {\n            return story;\n          }\n        });\n        break;\n      }\n      case \"Speaker\": {\n        // third category: speaker name\n        filteredStories = this.state.sourceStories.filter(story => {\n          if (\n            story.speakers.some(speaker => {\n              return (\n                speaker.name &&\n                speaker.name.toLowerCase() === item.toLowerCase()\n              );\n            })\n          ) {\n            return story;\n          }\n        });\n        break;\n      }\n      case \"Topic\": {\n        // fourth category: topic\n        filteredStories = this.state.sourceStories.filter(story => {\n            if (story.topic) {\n              return (\n                story.topic &&\n                story.topic.toLowerCase() === item.toLowerCase()\n              )\n            }\n        });\n        break;\n      }\n      case \"Language\": {\n        // fifth category: language\n        filteredStories = this.state.sourceStories.filter(story => {\n            if (story.language) {\n              return (\n                story.language &&\n                story.language.toLowerCase() === item.toLowerCase()\n              )\n            }\n        });\n        break;\n      }\n      case \"Speaker Community\": {\n        // sixth category: community\n        filteredStories = this.state.sourceStories\n          .filter((story) => story.speakers\n            .some(speaker => speaker.speaker_community && speaker.speaker_community.toLowerCase() === item.toLowerCase())\n          )\n          .map(story => {\n            let n = Object.assign({}, story)\n            n.speakers = n.speakers\n              .filter(speaker => speaker.speaker_community && speaker.speaker_community.toLowerCase() === item.toLowerCase())\n              return n\n            });\n        break;\n      }\n    }\n    if (filteredStories) {\n      const filteredPoints = this.getPointsFromStories(filteredStories);\n\n      const bounds = bbox(filteredPoints);\n      const bboxPoly = bboxPolygon(bounds);\n      const centerPoint = center(bboxPoly).geometry.coordinates;\n      const framedView = {\n        center: [centerPoint[0], centerPoint[1], 0]\n      };\n\n      var activePoint = this.state.activePoint;\n      if (activePoint && !filteredPoints.features.some(point => point.id === activePoint.id)) {\n          activePoint = null;\n      }\n\n      this.setState({\n        stories: filteredStories,\n        points: filteredPoints,\n        framedView,\n        activePoint\n      });\n    }\n  };\n\n  handleFilterCategoryChange = option => {\n    if (option === null) {\n      this.resetStoriesAndMap();\n    } else {\n      const category = option.value;\n      this.setState({ filterCategory: category, itemOptions: this.filterMap()[category] })\n    }\n  }\n\n  handleFilterItemChange = option => {\n    if (option === null) {\n      this.resetStoriesAndMap();\n    } else if (this.state.filterCategory !== null) {\n      const item = option.value;\n      this.handleFilter(this.state.filterCategory, item);\n      this.setState({ filterItem: item });\n    }\n  }\n\n  showMapPointStories = stories => {\n    let storyTitles = stories.map(story => story.title);\n    let filteredStories = [];\n    filteredStories = this.state.sourceStories.filter(story =>\n      storyTitles.includes(story.title)\n    );\n    if (filteredStories) {\n      this.setState({\n        stories: filteredStories,\n        activeStory: filteredStories[0]\n      });\n    }\n  };\n\n  handleStoriesChanged = stories => {\n    this.setState({ stories: stories });\n  };\n\n  handleStoryClick = story => {\n    // set active to first point in story\n    const point = story.points[0];\n    const framedView = { center: [point.geometry.coordinates[0], point.geometry.coordinates[1], 0] };\n    this.setState({ activePoint: point, activeStory: story, framedView });\n  };\n\n  resetStoriesAndMap = () => {\n    const points = this.getPointsFromStories(sampleStories);\n    this.setState({\n      stories: sampleStories,\n      points: points,\n      framedView: { center: [this.state.centerLong, this.state.centerLat, 0]},\n      activePoint: null,\n      activeStory: null,\n      filterCategory: \"Select category\",\n      filterItem: \"Select option\",\n      itemOptions: [],\n    });\n  };\n\n  // build category list based that excludes empty category sets\n  buildFilterCategories = () => {\n    const variableCategories = this.state.filterOptions;\n    let categories = this.filterMap();\n\n    Object.keys(categories).map(cat => {\n      if (categories[cat].length === 0 && variableCategories.includes(cat)) {\n        delete categories[cat]\n      }\n    })\n    let filteredCategories = Object.keys(categories)\n    return filteredCategories\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <CelestialMap\n          points={this.state.points}\n          clearFilteredStories={this.resetStoriesAndMap}\n          activePoint={this.state.activePoint}\n          framedView={this.state.framedView}\n          centerLat={this.state.centerLat}\n          centerLong={this.state.centerLong}\n          zoom={this.state.zoom}\n        />\n        <Card\n          activeStory={this.state.activeStory}\n          stories={this.state.stories}\n          handleStoriesChanged={this.handleStoriesChanged}\n          categories={this.buildFilterCategories()}\n          filterMap={this.filterMap()}\n          handleFilter={this.handleFilter}\n          clearFilteredStories={this.resetStoriesAndMap}\n          onStoryClick={this.handleStoryClick}\n          logo_path={this.state.logoPath}\n          filterCategory={this.state.filterCategory}\n          filterItem={this.state.filterItem}\n          handleFilterCategoryChange={this.handleFilterCategoryChange}\n          handleFilterItemChange={this.handleFilterItemChange}\n          itemOptions={this.state.itemOptions}\n        />\n        <IntroPopup />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}