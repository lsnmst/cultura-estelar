{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alessandromusetta\\\\node-app\\\\cultura-estelar\\\\src\\\\Sort.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SORT_CRITERIA = ['most_recent', 'alphabetical', 'reversed_alphabetical'];\nclass Sort extends Component {\n  constructor(props) {\n    super(props);\n    this.optionsHash = values => {\n      return values.map(value => {\n        return this.option(value);\n      });\n    };\n    this.option = value => {\n      let label;\n      if (value === \"most_recent\") {\n        label = \"Most recent\";\n      } else if (value === \"alphabetical\") {\n        label = \"Alphabetical\";\n      } else if (value === \"reversed_alphabetical\") {\n        label = \"Reverse alphabetical\";\n      } else {\n        label = \"\";\n      }\n      ;\n      return {\n        value: value,\n        label: label\n      };\n    };\n    this.handleSort = option => {\n      this.setState({\n        sortSelectValue: option.value\n      });\n      let sortedStories = [];\n      switch (option.value) {\n        case SORT_CRITERIA[0]:\n          {\n            // most recent\n            sortedStories = this.props.stories.sort((story1, story2) => {\n              if (story1.created_at < story2.created_at) {\n                return 1;\n              }\n              if (story1.created_at > story2.created_at) {\n                return -1;\n              }\n              return 0;\n            });\n            break;\n          }\n        case SORT_CRITERIA[1]:\n          {\n            sortedStories = this.props.stories.sort((story1, story2) => {\n              if (story1.title > story2.title) {\n                return 1;\n              }\n              if (story1.title < story2.title) {\n                return -1;\n              }\n              return 0;\n            });\n            break;\n          }\n        case SORT_CRITERIA[2]:\n          {\n            sortedStories = this.props.stories.sort((story1, story2) => {\n              if (story1.title < story2.title) {\n                return 1;\n              }\n              if (story1.title > story2.title) {\n                return -1;\n              }\n              return 0;\n            });\n            break;\n          }\n      }\n      this.props.handleStoriesChanged(sortedStories);\n    };\n    this.state = {\n      sortSelectValue: SORT_CRITERIA[0]\n    };\n  }\n  componentDidMount() {\n    this.handleSort(this.option(this.state.sortSelectValue));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"card--nav-sort\",\n        children: \"Sort stories: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"storiesSort\",\n        classNamePrefix: \"select\",\n        name: \"sort-stories\",\n        onChange: this.handleSort,\n        value: this.option(this.state.sortSelectValue),\n        options: this.optionsHash(SORT_CRITERIA)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n}\nSort.propTypes = {\n  stories: PropTypes.array,\n  handleStoriesChanged: PropTypes.func\n};\nSort.defaultProps = {\n  stories: [],\n  handleStoriesChanged: () => {}\n};\nexport default Sort;","map":{"version":3,"names":["React","Component","Select","PropTypes","jsxDEV","_jsxDEV","SORT_CRITERIA","Sort","constructor","props","optionsHash","values","map","value","option","label","handleSort","setState","sortSelectValue","sortedStories","stories","sort","story1","story2","created_at","title","handleStoriesChanged","state","componentDidMount","render","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","classNamePrefix","name","onChange","options","propTypes","array","func","defaultProps"],"sources":["C:/Users/alessandromusetta/node-app/cultura-estelar/src/Sort.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nconst SORT_CRITERIA = ['most_recent', 'alphabetical', 'reversed_alphabetical'];\n\nclass Sort extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      sortSelectValue: SORT_CRITERIA[0]\n    };\n  }\n\n  static propTypes = {\n    stories: PropTypes.array,\n    handleStoriesChanged: PropTypes.func\n  };\n\n  static defaultProps = {\n    stories: [],\n    handleStoriesChanged: () => {}\n  };\n\n  componentDidMount() {\n    this.handleSort(this.option(this.state.sortSelectValue));\n  }\n\n  optionsHash = values => {\n    return values.map(value => {\n      return this.option(value);\n    });\n  }\n\n  option = value => {\n    let label;\n    if (value === \"most_recent\") {\n      label = \"Most recent\"\n    } else if (value === \"alphabetical\") {\n      label = \"Alphabetical\"\n    } else if (value === \"reversed_alphabetical\") {\n      label = \"Reverse alphabetical\"\n    } else {\n      label = \"\"\n    };\n    return {value: value, label: label};\n  }\n\n  handleSort = (option) => {\n    this.setState({\n      sortSelectValue: option.value\n    });\n\n    let sortedStories = [];\n\n    switch (option.value) {\n      case SORT_CRITERIA[0]: {\n        // most recent\n        sortedStories = this.props.stories.sort((story1, story2) => {\n          if (story1.created_at < story2.created_at) {\n            return 1;\n          }\n\n          if (story1.created_at > story2.created_at) {\n            return -1;\n          }\n\n          return 0;\n        });\n\n        break;\n      }\n      case SORT_CRITERIA[1]: {\n        sortedStories = this.props.stories.sort((story1, story2) => {\n          if (story1.title > story2.title) {\n            return 1;\n          }\n\n          if (story1.title < story2.title) {\n            return -1;\n          }\n\n          return 0;\n        });\n\n        break;\n      }\n      case SORT_CRITERIA[2]: {\n        sortedStories = this.props.stories.sort((story1, story2) => {\n          if (story1.title < story2.title) {\n            return 1;\n          }\n\n          if (story1.title > story2.title) {\n            return -1;\n          }\n\n          return 0;\n        });\n\n        break;\n      }\n    }\n\n    this.props.handleStoriesChanged(sortedStories);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <span className=\"card--nav-sort\">Sort stories: </span>\n        <Select\n          className=\"storiesSort\"\n          classNamePrefix=\"select\"\n          name=\"sort-stories\"\n          onChange={this.handleSort}\n          value={this.option(this.state.sortSelectValue)}\n          options={this.optionsHash(SORT_CRITERIA)}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Sort;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}